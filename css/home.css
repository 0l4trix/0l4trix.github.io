* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-size: 20px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

body {
    text-align: center;
    background-color: #aaa;
}

a {
    text-decoration: none;
    font-size: 6vw;
    color: black;
    padding: 5vw;
}

h1 {
    text-transform: uppercase;
    font-size: 2em;
}

p {
    padding: 20px;
}

div#content {
    height: 100%;
    margin: 0 auto;
}

#content > * {
    text-shadow:
0.07em 0 white,
0 0.07em white,
-0.07em 0 white,
0 -0.07em white;
}

header {
    background-image: url(../img/grey.jpg);
    background-size: cover;
    padding: 30px;
}

section#three {
    background-image: url(../img/tree1.jpg);
    background-size: cover;
    background-position: 50% 70%;
    filter: grayscale(100%);
    transition: all 0.5s;
    height: 500px;
    -moz-transform: translate(0px, -15vw);
    -webkit-transform: translate(0px, -15vw);
    -o-transform: translate(0px, -15vw);
    -ms-transform: translate(0px, -15vw);
    transform: translate(0px, -15vw)
}

section#three:hover {
    filter: grayscale(0);
    text-shadow:
0.07em 0 #97BC62FF,
0 0.07em #97BC62FF,
-0.07em 0 #97BC62FF,
0 -0.07em #97BC62FF;
}

section#three p {
    padding-top: 30vh;
}

img {
    filter: grayscale(100%);
    transition: all 0.7s ease-in-out;
}

  div.choice img {
    width: 0;
    min-width: calc(100% + var(--z)/2);
    height: var(--s);
    object-fit: cover;
    -webkit-mask: var(--mask);
            mask: var(--mask);
  }

  figcaption {
    -moz-transform: translate(0px, -500%);
    -webkit-transform: translate(0px, -500%);
    -o-transform: translate(0px, -500%);
    -ms-transform: translate(0px, -500%);
    transform: translate(0px, -500%);
  }

  figure:hover > img {
    filter: grayscale(0);
  }

    figure:hover {
        text-shadow:
    0.07em 0 #97BC62FF,
    0 0.07em #97BC62FF,
    -0.07em 0 #97BC62FF,
    0 -0.07em #97BC62FF;}

    @media screen and (max-width: 600px) {
        div.choice {
            --z: 1px;  /* control the zig-zag  */
            --g: 0px;   /* control the gap */
            display: grid;
            grid-auto-flow: row;
          }
          div.choice > div {
            width: 100%;
          }

        div.choice > div:first-child {
          place-self: start;
        }

        div.choice > div:last-child {
            place-self: end;
            -moz-transform: translate(0px, -10vw);
            -webkit-transform: translate(0px, -10vw);
            -o-transform: translate(0px, -10vw);
            -ms-transform: translate(0px, -10vw);
            transform: translate(0px, -10vw)
          }

          section#three {
            -moz-transform: translate(0px, -18vw);
            -webkit-transform: translate(0px, -18vw);
            -o-transform: translate(0px, -18vw);
            -ms-transform: translate(0px, -18vw);
            transform: translate(0px, -18vw)}
    }

    @media screen and (min-width: 600px) {

        div.choice {
            --z: 1px;  /* control the zig-zag  */
            --s: 50vw; /* control the size */
            --g: 0px;   /* control the gap */
            
            display: grid;
            gap: var(--g);
            width: calc(2*var(--s) + var(--g));
            grid-auto-flow: column;
          }
          div.choice > div {
            width: 0;
            min-width: calc(100% + var(--z)/2);
            -webkit-mask: var(--mask);
                    mask: var(--mask);
            cursor: pointer;
            transition: .5s;
          }
          div.choice > div:hover {
            width: calc(var(--s)/2);
          }
          div.choice > div:first-child {
            place-self: start;
            clip-path: polygon(calc(2*var(--z)) 0,100% 0,100% 100%,0 100%);
            --mask: 
              conic-gradient(from -135deg at right,#0000,#000 1deg 89deg,#0000 90deg) 
                50%/100% calc(2*var(--z)) repeat-y;
          }
          div.choice > div:last-child {
            place-self: end;
            clip-path: polygon(0 0,100% 0,calc(100% - 2*var(--z)) 100%,0 100%);
            --mask: 
            conic-gradient(from   45deg at left ,#0000,#000 1deg 89deg,#0000 90deg) 
                50% calc(50% - var(--z))/100% calc(2*var(--z)) repeat-y;
          }}